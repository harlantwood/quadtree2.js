/*
 * - quadtree2 0.0.1
 * - Two dimensional quadtree for regions and collision detection.
 * - by Burning Gramma <burninggramma@gmail.com>
 * - https://github.com/burninggramma/quadtree2.js
 * --------------------------------------------
 * built on 2014-01-24
*/
var injector=function(a,b){return"undefined"!=typeof module&&"object"==typeof module.exports?b():a()},Vec2=injector(function(){if(!window.Vec2)throw new Error("Vec2 is a requirement");return window.Vec2},function(){return require("vec2")}),Quadtree2;Quadtree2=function(a,b){var c,d={map_:{},count_:0},e={data:{necessary:["size","limit"]}},f={init:function(){var a;for(a in e.data.necessary)if(void 0===d[e.data.necessary[a]+"_"])throw new Error("Can not work without the necessary properties")},checkInit:function(){d.inited_||f.init()}},g={getLimit:function(){return d.limit_},setLimit:function(a){if(void 0!==a){if("number"!=typeof a)throw new Error("Parameter should be a number");d.limit_=a}},getCount:function(){return d.count_},getSize:function(){return d.size_.clone()},setSize:function(a){if(void 0!==a){if("object"!=typeof a||!(a instanceof Vec2))throw new Error("Parameter should be an instance of Vec2");d.size_=a.clone()}},addRect:function(){f.checkInit(),d.count_++},addCircle:function(){throw f.checkInit(),new Error("Not implemented")}};for(c in g)this[c]=g[c];this.setSize(a),this.setLimit(b)},injector(function(){window.Quadtree2=Quadtree2},function(){module.exports=Quadtree2});