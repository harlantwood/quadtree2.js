/*
 * - quadtree2 0.0.1
 * - Two dimensional quadtree for regions and collision detection.
 * - by Burning Gramma <burninggramma@gmail.com>
 * - https://github.com/burninggramma/quadtree2.js
 * --------------------------------------------
 * built on 2014-01-25
*/
var injector=function(a,b){return"undefined"!=typeof module&&"object"==typeof module.exports?b():a()},Vec2=injector(function(){if(!window.Vec2)throw new Error("Vec2 is a requirement");return window.Vec2},function(){return require("vec2")}),Quadtree2;Quadtree2=function(a,b,c){var d,e={map_:{},count_:0,ids_:0,autoId_:!0,inited_:!1,limit_:void 0,size_:void 0,meta_:{shapes:{}}},f={p:"pos_",r:"rad_",R:"rot_",id:"id_"},g={isNumber:function(a){if("number"!=typeof a)throw new Error("NaN - Not a Number")},isString:function(a){if(!("string"==typeof a||a instanceof String))throw new Error("NaS - Not a String")},isVec2:function(a){var b=!1;if(b="object"!=typeof a||!(a instanceof Vec2),b=b||void 0===a.x||void 0===a.y)throw new Error("NaV - Not a Vec2")},isDefined:function(a){if(void 0===a)throw new Error("ND - Not defined")},isObject:function(a){if("object"!=typeof a)throw new Error("NaO - Not an Object")},isUniqId:function(a){if(void 0!==e.map_[a])throw new Error("OaA - Object already added")},isNotInited:function(){if(e.inited_)throw new Error("QaI - Quadtree2 already inited")},hasKey:function(a,b){if(-1===Object.keys(a).indexOf(b))throw new Error("OhnK - Object has no key: "+b)},byCallbackObject:function(a,b,c){var d;for(d in b)b[d](void 0!==c?a[c[d]]:a[d])}},h={data:{necessary:{size_:g.isVec2,limit_:g.isNumber}},k:{necessary:{p:g.isVec2},circle:{necessary:{r:g.isNumber}},rect:{necessary:{R:g.isNumber}}}},i={nextId:function(){return++e.ids_},init:function(){g.byCallbackObject(e,h.data.necessary),e.inited_=!0},checkInit:function(a){return a&&!e.inited_&&i.init(),e.inited_},checkObjectKeys:function(a){g.isDefined(a),g.isObject(a),g.byCallbackObject(a,h.k.necessary,f),e.autoId_||(g.isDefined(a[f.id]),g.isUniqId(a[f.id]))},setObjId:function(a){e.autoId_&&(a[f.id]=i.nextId())}},j={getLimit:function(){return e.limit_},setLimit:function(a){void 0!==a&&(g.isNumber(a),e.limit_=a)},getCount:function(){return e.count_},setObjectKey:function(a,b){g.isNotInited(),void 0!==b&&(g.hasKey(f,a),g.isString(b),"id"===a&&(e.autoId_=!1),f[a]=b)},getSize:function(){return e.size_.clone()},setSize:function(a){void 0!==a&&(g.isVec2(a),e.size_=a.clone())},addObject:function(a){i.checkInit(!0),i.checkObjectKeys(a),i.setObjId(a),g.isUniqId(a[f.id]),e.map_[a[f.id]]=a,e.count_++}};for(d in j)this[d]=j[d];this.setSize(a),this.setLimit(b),this.setObjectKey("id",c)},injector(function(){window.Quadtree2=Quadtree2},function(){module.exports=Quadtree2});