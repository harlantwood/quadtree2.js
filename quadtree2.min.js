/*
 * - quadtree2 0.0.1
 * - Two dimensional quadtree for regions and collision detection.
 * - by Burning Gramma <burninggramma@gmail.com>
 * - https://github.com/burninggramma/quadtree2.js
 * --------------------------------------------
 * built on 2014-01-25
*/
var injector=function(a,b){return"undefined"!=typeof module&&"object"==typeof module.exports?b():a()},Vec2=injector(function(){if(!window.Vec2)throw new Error("Vec2 is a requirement");return window.Vec2},function(){return require("vec2")}),Quadtree2;Quadtree2=function(a,b,c){var d,e={map_:{},count_:0,ids_:0,autoId_:!0,inited_:!1,limit_:void 0,size_:void 0,shapes_:{}},f={p:"pos_",r:"rad_",R:"rot_",id:"id_"},g=function(a,b,c){var d=a;throw c&&(d+="_"+c),b&&(d+=" - "),b&&c&&(d+=c+": "),b&&(d+=b),new Error(d)},h={isNumber:function(a,b){"number"!=typeof a&&g("NaN","Not a Number",b)},isString:function(a,b){"string"==typeof a||a instanceof String||g("NaS","Not a String",b)},isVec2:function(a,b){var c=!1;c="object"!=typeof a||!(a instanceof Vec2),c=c||void 0===a.x||void 0===a.y,c&&g("NaV","Not a Vec2",b)},isDefined:function(a,b){void 0===a&&g("ND","Not defined",b)},isObject:function(a,b){"object"!=typeof a&&g("NaO","Not an Object",b)},isUniqId:function(a,b){void 0!==e.map_[a]&&g("OaA","Object already added",b)},isNotInited:function(a){e.inited_&&g("QaI","Quadtree2 already inited",a)},hasKey:function(a,b,c){-1===Object.keys(a).indexOf(b)&&g("OhnK","Object has no key: "+b,c)},byCallbackObject:function(a,b,c){var d;for(d in b)void 0!==c?b[d](a[c[d]],c[d]):b[d](a[d],d)}},i={data:{necessary:{size_:h.isVec2,limit_:h.isNumber}},k:{necessary:{p:h.isVec2},c:{necessary:{r:h.isNumber}},r:{necessary:{R:h.isNumber}}}},j={nextId:function(){return++e.ids_},init:function(){h.byCallbackObject(e,i.data.necessary),e.inited_=!0},checkInit:function(a){return a&&!e.inited_&&j.init(),e.inited_},checkObjectKeys:function(a){h.isDefined(a[f.id],f.id),h.isUniqId(a[f.id],a[f.id]),h.byCallbackObject(a,i.k.necessary,f),h.byCallbackObject(a,i.k[j.getObjShape(a)].necessary,f)},setObjId:function(a){e.autoId_&&(a[f.id]=j.nextId())},setObjShape:function(a){var b=void 0===a[f.r],c=b?f.R:f.r;h.isDefined(a[c],c),e.shapes_[a[f.id]]=b?"r":"c"},getObjShape:function(a){return e.shapes_[a[f.id]]}},k={getLimit:function(){return e.limit_},setLimit:function(a){void 0!==a&&(h.isNumber(a,"limit_"),e.limit_=a)},getCount:function(){return e.count_},setObjectKey:function(a,b){h.isNotInited(),void 0!==b&&(h.hasKey(f,a,a),h.isString(b,a),"id"===a&&(e.autoId_=!1),f[a]=b)},getSize:function(){return e.size_.clone()},setSize:function(a){void 0!==a&&(h.isVec2(a,"size_"),e.size_=a.clone())},addObject:function(a){h.isDefined(a,"obj"),h.isObject(a,"obj"),j.checkInit(!0),j.setObjId(a),j.setObjShape(a),j.checkObjectKeys(a),e.map_[a[f.id]]=a,e.count_++}};for(d in k)this[d]=k[d];this.setSize(a),this.setLimit(b),this.setObjectKey("id",c)},injector(function(){window.Quadtree2=Quadtree2},function(){module.exports=Quadtree2});