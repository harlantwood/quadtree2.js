/*
 * - quadtree2 0.0.1
 * - Two dimensional quadtree for regions and collision detection.
 * - by Burning Gramma <burninggramma@gmail.com>
 * - https://github.com/burninggramma/quadtree2.js
 * --------------------------------------------
 * built on 2014-01-25
*/
var injector=function(a,b){return"undefined"!=typeof module&&"object"==typeof module.exports?b():a()},Vec2=injector(function(){if(!window.Vec2)throw new Error("Vec2 is a requirement");return window.Vec2},function(){return require("vec2")}),fnName=function(a){var b=a.toString();return b=b.substr("function ".length),b=b.substr(0,b.indexOf("("))},thrower=function(a,b,c){var d=a;throw c&&(d+="_"+c),b&&(d+=" - "),b&&c&&(d+=c+": "),b&&(d+=b),new Error(d)},Quadtree2,Quadtree2Node,Quadtree2Helper;Quadtree2Helper=function(){},Quadtree2Helper.prototype={isNumber:function(a,b){"number"!=typeof a&&thrower("NaN","Not a Number",b)},isString:function(a,b){"string"==typeof a||a instanceof String||thrower("NaS","Not a String",b)},isVec2:function(a,b){var c=!1;c="object"!=typeof a||!(a instanceof Vec2),c=c||void 0===a.x||void 0===a.y,c&&thrower("NaV","Not a Vec2",b)},isDefined:function(a,b){void 0===a&&thrower("ND","Not defined",b)},isObject:function(a,b){"object"!=typeof a&&thrower("NaO","Not an Object",b)},hasKey:function(a,b,c){-1===Object.keys(a).indexOf(b)&&thrower("OhnK","Object has no key",c+b)},hasNoKey:function(a,b,c){-1!==Object.keys(a).indexOf(b)&&thrower("OhK","Object has key",c+b)},fnFalse:function(a){a()&&thrower("FarT","function already returns true",fnName(a))},byCallbackObject:function(a,b,c){var d;for(d in b)void 0!==c?b[d](a[c[d]],c[d]):b[d](a[d],d)}},Quadtree2Node=function(){this.children=[]},Quadtree2=function(a,b,c,d){var e,f={root_:new Quadtree2Node,objects_:{},count_:0,ids_:0,autoId_:!0,inited_:!1,limit_:void 0,size_:void 0,shapes_:{}},g=new Quadtree2Helper,h={p:"pos_",r:"rad_",R:"rot_",id:"id_"},i={data:{necessary:{size_:g.isVec2,limit_:g.isNumber}},k:{necessary:{p:g.isVec2},c:{necessary:{r:g.isNumber}},r:{necessary:{R:g.isNumber}}}},j={nextId:function(){return++f.ids_},getSmallestNode:function(a,b){var c;if(b||(b=this.root_),0===b.children.length)return b;for(c in b.children);return b},init:function(){g.byCallbackObject(f,i.data.necessary),f.inited_=!0},checkInit:function(a){return a&&!f.inited_&&j.init(),f.inited_},checkObjectKeys:function(a){g.isDefined(a[h.id],h.id),g.hasNoKey(f.objects_,a[h.id],h.id),g.byCallbackObject(a,i.k.necessary,h),g.byCallbackObject(a,i.k[j.getObjShape(a)].necessary,h)},setObjId:function(a){f.autoId_&&(a[h.id]=j.nextId())},setObjShape:function(a){var b=void 0===a[h.r],c=b?h.R:h.r;g.isDefined(a[c],c),f.shapes_[a[h.id]]=b?"r":"c"},getObjShape:function(a){return f.shapes_[a[h.id]]}},k={getLimit:function(){return f.limit_},setLimit:function(a){void 0!==a&&(g.isNumber(a,"limit_"),f.limit_=a)},getCount:function(){return f.count_},setObjectKey:function(a,b){g.fnFalse(j.checkInit),void 0!==b&&(g.hasKey(h,a,a),g.isString(b,a),"id"===a&&(f.autoId_=!1),h[a]=b)},getSize:function(){return f.size_.clone()},setSize:function(a){void 0!==a&&(g.isVec2(a,"size_"),f.size_=a.clone())},addObjects:function(a){a.forEach(function(a){k.addObject(a)})},addObject:function(a){g.isDefined(a,"obj"),g.isObject(a,"obj"),j.checkInit(!0),j.setObjId(a),j.setObjShape(a),j.checkObjectKeys(a),f.objects_[a[h.id]]=a,f.count_++},getCollidedObjects:function(){var a,b=[];j.checkInit(!0);for(a in f.objects_)b.push(f.objects_[a]);return b}};for(e in k)this[e]=k[e];if(d)for(e in j)this[e]=j[e];this.setSize(a),this.setLimit(b),this.setObjectKey("id",c)},injector(function(){window.Quadtree2=Quadtree2},function(){module.exports=Quadtree2});